#name: CI
#on: [push]
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v1
#    - name: Run a one-line script
#      run: echo Hello, world!
#    - name: Run a multi-line script
#      run: |
#        echo Add other actions to build,
#        echo test, and deploy your project.

#==================================================================================================#

#1.  Python Interface
# Example, do not modify!
print(5 / 8)

# Put code below here
5 / 8
#Addition = buat comment
print(7+10)

#Python as A Calculator
#Suppose you have $100, which you can invest with a 10% return each year. 
#After one year, it's 100×1.1=110 dollars, and after two years it's 100×1.1×1.1=121. 
#Add code to calculate how much money you end up with after 7 years, and print the result.
print(100 * 1.1 ** 7)

#2. Variables and Types
# Create a variable savings
savings = 100

# Print out savings
print(savings)

#Instead of calculating with the actual values, you can use variables instead
#Create a variable growth_multiplier, equal to 1.1.
#Create a variable, result, equal to the amount of money you saved after 7 years.
#Print out the value of result.
# Create a variable savings
savings = 100

# Create a variable factor
growth_multiplier = 1.1

# Calculate result
result = savings * growth_multiplayer ** 7

# Print out result
print(result)

#Create a new string, desc, with the value "compound interest".
#Create a new boolean, profitable, with the value True.
# Create a variable desc
desc = "compound interest"

# Create a variable profitable
profitable = True

#To find out the type of a value or a variable that refers to that value, 
#you can use the type() function

type(a)
type(b)
type(c)

#Calculate the product of savings and growth_multiplier. Store the result in year1.
savings = 100
growth_multiplier = 1.1
desc = "compound interest"
# Assign product of factor and savings to year1
year1 = savings * growth_multiplier

#What do you think the resulting type will be? Find out by printing out the type of year1.
print(type(year1))

#Calculate the sum of desc and desc and store the result in a new variable doubledesc.
# Assign sum of desc and desc to doubledesc
doubledesc = desc+desc

#Print out doubledesc. Did you expect this?
print(doubledesc)

#To fix the error, you'll need to explicitly convert the types of your variables. 
#More specifically, you'll need str(), to convert a value into a string. str(savings), 
#for example, will convert the integer savings to a string.

#Similar functions such as int(), float() and bool() will help you convert Python values into any type.
# Definition of savings and result
savings = 100
result = 100 * 1.10 ** 7

# Fix the printout
print("I started with $" + str(savings) + " and now have $" + str(result) + ". Awesome!")

# Definition of pi_string
pi_string = "3.1415926"

# Convert pi_string into float: pi_float
pi_float = float(pi_string)

#Python handle this
print("I can add integers, like " + str(5) + " to strings.")
print("I said " + ("Hey " * 2) + "Hey!")
print(True + False)







